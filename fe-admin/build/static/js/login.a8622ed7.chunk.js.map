{"version":3,"sources":["pages/Login/index.less","pages/Login/index.tsx"],"names":["LoginForm","form","AuthStore","useStore","loginAction","handleSubmit","e","preventDefault","validateFields","err","values","status","message","error","AWRouter","instance","pushByName","replace","getFieldDecorator","rules","required","WrappedLoginForm","create","name","LoginPage"],"mappings":";;;;;AAAA,uC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACeA,GAAMA,UAAiC,CAAG,QAApCA,UAAoC,MAAc,IAAXC,KAAW,MAAXA,IAAW,yBAC9BC,4DAAS,CAACC,QAAV,EAD8B,CAC9CC,WAD8C,qBAC9CA,WAD8C,CAGtD,GAAMC,aAAY,CAAG,QAAfA,aAAe,CAACC,CAAD,CAAkB,CACrCA,CAAC,CAACC,cAAF,GAEAN,IAAI,CAACO,cAAL,2XAAoB,iBAAOC,GAAP,CAAYC,MAAZ,6QACdD,GADc,uFAEcL,YAAW,CAACM,MAAM,CAAC,UAAD,CAAP,CAAqBA,MAAM,CAAC,UAAD,CAA3B,CAFzB,4BAEXC,MAFW,OAEXA,MAFW,CAEHC,OAFG,OAEHA,OAFG,IAGbD,MAHa,0BAIhB,wDAAaE,KAAb,CAAmBD,OAAO,EAAI,MAA9B,EAJgB,yCAQlBE,uDAAQ,CAACC,QAAT,GAAoBC,UAApB,CAA+B,MAA/B,CAAuC,CACrCC,OAAO,CAAE,IAD4B,CAAvC,EARkB,uDAApB,qEAYD,CAfD,CAiBA,MACE,mHAAM,SAAS,CAAC,YAAhB,CAA6B,MAAM,CAAC,UAApC,CAA+C,QAAQ,CAAEZ,YAAzD,EACE,kEAAI,SAAS,CAAC,OAAd,wBADF,CAEE,mEAAK,SAAS,CAAC,WAAf,EACE,iHAAM,IAAN,EAAW,SAAS,CAAC,WAArB,EACGJ,IAAI,CAACiB,iBAAL,CAAuB,UAAvB,CAAmC,CAClCC,KAAK,CAAE,CAAC,CAAEC,QAAQ,CAAE,IAAZ,CAAkBR,OAAO,CAAE,WAA3B,CAAD,CAD2B,CAAnC,EAGC,mHAAO,WAAW,CAAC,UAAnB,EAHD,CADH,CADF,CAQE,iHAAM,IAAN,EAAW,SAAS,CAAC,WAArB,EACGX,IAAI,CAACiB,iBAAL,CAAuB,UAAvB,CAAmC,CAClCC,KAAK,CAAE,CAAC,CAAEC,QAAQ,CAAE,IAAZ,CAAkBR,OAAO,CAAE,OAA3B,CAAD,CAD2B,CAAnC,EAGC,mHAAO,IAAI,CAAC,UAAZ,CAAuB,WAAW,CAAC,UAAnC,EAHD,CADH,CARF,CAeE,iHAAM,IAAN,EAAW,SAAS,CAAC,WAArB,EACE,oHAAQ,IAAI,CAAC,SAAb,CAAuB,QAAQ,CAAC,QAAhC,CAAyC,SAAS,CAAC,aAAnD,kBADF,CAfF,CAFF,CADF,CA0BD,CA9CD,CAgDA,GAAMS,iBAAgB,CAAG,qDAAKC,MAAL,CAAY,CAAEC,IAAI,CAAE,OAAR,CAAZ,EAA+BvB,SAA/B,CAAzB,CAEA,GAAMwB,UAAa,CAAG,QAAhBA,UAAgB,EAAM,CAC1B,MACE,oEAAK,SAAS,CAAC,YAAf,EACE,4DAAC,gBAAD,MADF,CADF,CAKD,CAND,CAQeA,wEAAf,E","file":"static/js/login.a8622ed7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin","import React, { FC, FormEvent } from 'react';\nimport {\n  Form,\n  Input,\n  Button,\n  message as messageAlert,\n} from 'antd';\nimport { FormComponentProps } from 'antd/lib/form';\n\nimport './index.less';\n\nimport AWRouter from 'aw-react-router';\nimport AuthStore from '@/store/auth';\n\n\nconst LoginForm: FC<FormComponentProps> = ({ form }) => {\n  const { loginAction } = AuthStore.useStore();\n\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    form.validateFields(async (err, values) => {\n      if (err) { return; }\n      const {status, message} = await loginAction(values['username'], values['password']);\n      if (!status) {\n        messageAlert.error(message || '登录失败');\n        return;\n      }\n\n      AWRouter.instance().pushByName('home', {\n        replace: true,\n      });\n    });\n  };\n\n  return (\n    <Form className=\"login-form\" layout=\"vertical\" onSubmit={handleSubmit}>\n      <h3 className=\"title\">XXXXXX 平台</h3>\n      <div className=\"form-body\">\n        <Form.Item className=\"form-item\">\n          {form.getFieldDecorator('username', {\n            rules: [{ required: true, message: '请输入正确的用户名' }],\n          })(\n            <Input placeholder=\"Username\" />,\n          )}\n        </Form.Item>\n        <Form.Item className=\"form-item\">\n          {form.getFieldDecorator('password', {\n            rules: [{ required: true, message: '请输入密码' }],\n          })(\n            <Input type=\"password\" placeholder=\"Password\" />,\n          )}\n        </Form.Item>\n        <Form.Item className=\"form-item\">\n          <Button type=\"primary\" htmlType=\"submit\" className=\"form-button\">\n            登 录\n        </Button>\n        </Form.Item>\n      </div>\n    </Form>\n  );\n};\n\nconst WrappedLoginForm = Form.create({ name: 'login' })(LoginForm);\n\nconst LoginPage: FC = () => {\n  return (\n    <div className=\"login-page\">\n      <WrappedLoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"sourceRoot":""}